{"version":3,"file":"static/js/852.77a74562.chunk.js","mappings":"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","sources":["webpack://my-app/./src/features/books/pages/BooksPage/BooksPage.module.scss?8cd1","assets/icons/rating.svg","webpack://my-app/./src/components/BookCard/BookCard.module.scss?67aa","assets/icons/edit.svg","assets/icons/delete.svg","webpack://my-app/./src/components/BookActions/BookActions.module.scss?9e9b","components/BookActions/BookActions.tsx","components/BookCard/BookCard.tsx","features/books/pages/BooksPage/render.tsx","components/BooksSortingSelect/config.ts","components/BooksSortingSelect/BooksSortingSelect.tsx","webpack://my-app/./src/components/BooksTable/BooksTable.module.scss?5392","components/BooksTable/columns.tsx","components/BooksTable/BooksTable.tsx","features/books/pages/BooksPage/types.ts","features/books/pages/BooksPage/BooksPage.tsx","core/services/hooks/useBooksState.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"books-page\":\"BooksPage_books-page__9cXPf\",\"books-page__container\":\"BooksPage_books-page__container__M4vIq\",\"books-page__settings\":\"BooksPage_books-page__settings__RTOYF\",\"books-page__grid-type\":\"BooksPage_books-page__grid-type__YoGeZ\",\"active\":\"BooksPage_active__tzQgF\",\"books-page__best-book\":\"BooksPage_books-page__best-book__1sN27\",\"books-page__best-book__title\":\"BooksPage_books-page__best-book__title__n6QwK\",\"books-page__best-book__content\":\"BooksPage_books-page__best-book__content__uz+6N\",\"books-page__best-book__cover\":\"BooksPage_books-page__best-book__cover__yVLhd\",\"books-page__best-book__cover_empty\":\"BooksPage_books-page__best-book__cover_empty__tgleX\",\"books-page__best-book__rating-wrapper\":\"BooksPage_books-page__best-book__rating-wrapper__RdjEQ\",\"books-page__best-book__rating\":\"BooksPage_books-page__best-book__rating__wmppT\",\"books-page__best-book__info\":\"BooksPage_books-page__best-book__info__SPDx5\",\"books-page__best-book__name\":\"BooksPage_books-page__best-book__name__9s5Et\",\"books-page__best-book__author\":\"BooksPage_books-page__best-book__author__Qbsg4\",\"books-page__best-book__add-info\":\"BooksPage_books-page__best-book__add-info__U0vXS\",\"books-page__catalog_header\":\"BooksPage_books-page__catalog_header__dMVbu\",\"books-page__catalog\":\"BooksPage_books-page__catalog__qAtv5\",\"books-page__catalog__subtitle_wrapper\":\"BooksPage_books-page__catalog__subtitle_wrapper__Bvjy9\",\"books-page__catalog__subtitle\":\"BooksPage_books-page__catalog__subtitle__cY+yB\",\"books-page__empty-catalog\":\"BooksPage_books-page__empty-catalog__pNH6J\"};","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgRating(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.2151 4.80378L10.1722 4.04306C10.0608 4.0152 9.96239 3.94985 9.89349 3.85798L7.4 0.533333C7.2 0.266667 6.8 0.266667 6.6 0.533333L4.10651 3.85798C4.03761 3.94985 3.93919 4.0152 3.82778 4.04306L0.784862 4.80378C0.424269 4.89393 0.284608 5.33204 0.526501 5.61425L2.85871 8.33516C2.94884 8.44031 2.99132 8.57813 2.97603 8.71577L2.5863 12.2233C2.546 12.586 2.89518 12.8683 3.24135 12.7529L6.84189 11.5527C6.94452 11.5185 7.05548 11.5185 7.15811 11.5527L10.7586 12.7529C11.1048 12.8683 11.454 12.586 11.4137 12.2233L11.024 8.71577C11.0087 8.57813 11.0512 8.44031 11.1413 8.33516L13.4735 5.61425C13.7154 5.33204 13.5757 4.89393 13.2151 4.80378Z\",\n    fill: \"#FFE500\",\n    stroke: \"#FFE500\",\n    strokeWidth: 0.5\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRating);\nexport default __webpack_public_path__ + \"static/media/rating.83e6d9febac691735f27bb64c2703fad.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"book-card\":\"BookCard_book-card__mRahv\",\"book-card__cover-wrapper\":\"BookCard_book-card__cover-wrapper__DyF7Z\",\"book-card__cover\":\"BookCard_book-card__cover__Jdxnr\",\"book-card__cover-empty\":\"BookCard_book-card__cover-empty__LQ9Fm\",\"book-card__rating-wrapper\":\"BookCard_book-card__rating-wrapper__ltell\",\"book-card__rating\":\"BookCard_book-card__rating__PZiSO\",\"book-card__rating-icon\":\"BookCard_book-card__rating-icon__sxkjC\",\"book-card__actions\":\"BookCard_book-card__actions__fsie4\",\"book-card__name\":\"BookCard_book-card__name__q7hAH\",\"book-card__authors\":\"BookCard_book-card__authors__kmJDX\",\"book-card__additional-info\":\"BookCard_book-card__additional-info__huBLb\"};","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEdit(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.3776 2.425C19.4944 2.54216 19.56 2.70083 19.56 2.86625C19.56 3.03167 19.4944 3.19035 19.3776 3.3075L18.0739 4.6125L15.5739 2.1125L16.8776 0.807503C16.9948 0.690334 17.1538 0.624512 17.3195 0.624512C17.4852 0.624512 17.6442 0.690334 17.7614 0.807503L19.3776 2.42375V2.425ZM17.1901 5.495L14.6901 2.995L6.17388 11.5125C6.10509 11.5813 6.05329 11.6652 6.02263 11.7575L5.01638 14.775C4.99813 14.83 4.99554 14.889 5.0089 14.9454C5.02226 15.0018 5.05103 15.0534 5.09202 15.0944C5.133 15.1354 5.18457 15.1641 5.24097 15.1775C5.29737 15.1908 5.35637 15.1883 5.41138 15.17L8.42888 14.1638C8.52109 14.1335 8.60497 14.0821 8.67388 14.0138L17.1901 5.495Z\",\n    fill: \"#485BFF\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1.25 16.875C1.25 17.3723 1.44754 17.8492 1.79917 18.2008C2.15081 18.5525 2.62772 18.75 3.125 18.75H16.875C17.3723 18.75 17.8492 18.5525 18.2008 18.2008C18.5525 17.8492 18.75 17.3723 18.75 16.875V9.375C18.75 9.20924 18.6842 9.05027 18.5669 8.93306C18.4497 8.81585 18.2908 8.75 18.125 8.75C17.9592 8.75 17.8003 8.81585 17.6831 8.93306C17.5658 9.05027 17.5 9.20924 17.5 9.375V16.875C17.5 17.0408 17.4342 17.1997 17.3169 17.3169C17.1997 17.4342 17.0408 17.5 16.875 17.5H3.125C2.95924 17.5 2.80027 17.4342 2.68306 17.3169C2.56585 17.1997 2.5 17.0408 2.5 16.875V3.125C2.5 2.95924 2.56585 2.80027 2.68306 2.68306C2.80027 2.56585 2.95924 2.5 3.125 2.5H11.25C11.4158 2.5 11.5747 2.43415 11.6919 2.31694C11.8092 2.19973 11.875 2.04076 11.875 1.875C11.875 1.70924 11.8092 1.55027 11.6919 1.43306C11.5747 1.31585 11.4158 1.25 11.25 1.25H3.125C2.62772 1.25 2.15081 1.44754 1.79917 1.79917C1.44754 2.15081 1.25 2.62772 1.25 3.125V16.875Z\",\n    fill: \"#485BFF\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEdit);\nexport default __webpack_public_path__ + \"static/media/edit.54da44554cf8e27434db7f2d280d40e7.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.125 1.25H11.875C12.0408 1.25 12.1997 1.31585 12.3169 1.43306C12.4342 1.55027 12.5 1.70924 12.5 1.875V3.125H7.5V1.875C7.5 1.70924 7.56585 1.55027 7.68306 1.43306C7.80027 1.31585 7.95924 1.25 8.125 1.25ZM13.75 3.125V1.875C13.75 1.37772 13.5525 0.900805 13.2008 0.549175C12.8492 0.197544 12.3723 0 11.875 0L8.125 0C7.62772 0 7.15081 0.197544 6.79917 0.549175C6.44754 0.900805 6.25 1.37772 6.25 1.875V3.125H3.1325C3.12833 3.12496 3.12417 3.12496 3.12 3.125H1.875C1.70924 3.125 1.55027 3.19085 1.43306 3.30806C1.31585 3.42527 1.25 3.58424 1.25 3.75C1.25 3.91576 1.31585 4.07473 1.43306 4.19194C1.55027 4.30915 1.70924 4.375 1.875 4.375H2.5475L3.61375 17.7C3.66403 18.3265 3.94844 18.9111 4.41034 19.3373C4.87224 19.7635 5.47774 20.0001 6.10625 20H13.8937C14.5223 20.0001 15.1278 19.7635 15.5897 19.3373C16.0516 18.9111 16.336 18.3265 16.3863 17.7L17.4525 4.375H18.125C18.2908 4.375 18.4497 4.30915 18.5669 4.19194C18.6842 4.07473 18.75 3.91576 18.75 3.75C18.75 3.58424 18.6842 3.42527 18.5669 3.30806C18.4497 3.19085 18.2908 3.125 18.125 3.125H16.8813C16.8771 3.12496 16.8729 3.12496 16.8687 3.125H13.75ZM16.1975 4.375L15.14 17.6C15.1149 17.9132 14.9727 18.2055 14.7417 18.4186C14.5108 18.6318 14.208 18.7501 13.8937 18.75H6.10625C5.792 18.7501 5.48925 18.6318 5.2583 18.4186C5.02735 18.2055 4.88514 17.9132 4.86 17.6L3.8025 4.375H16.1975ZM6.83875 5.625C7.00417 5.61544 7.16661 5.67195 7.29037 5.78212C7.41413 5.89229 7.48908 6.04709 7.49875 6.2125L8.12375 16.8375C8.13032 17.001 8.07252 17.1605 7.96277 17.2818C7.85302 17.4032 7.70007 17.4766 7.53676 17.4865C7.37345 17.4963 7.2128 17.4417 7.0893 17.3344C6.96581 17.227 6.88932 17.0756 6.87625 16.9125L6.25 6.2875C6.24493 6.20539 6.25611 6.12309 6.28291 6.04531C6.30972 5.96754 6.35161 5.89581 6.40619 5.83426C6.46077 5.77271 6.52697 5.72255 6.60098 5.68664C6.675 5.65072 6.75537 5.62978 6.8375 5.625H6.83875ZM13.1613 5.625C13.2434 5.62978 13.3238 5.65072 13.3978 5.68664C13.4718 5.72255 13.538 5.77271 13.5926 5.83426C13.6471 5.89581 13.689 5.96754 13.7158 6.04531C13.7426 6.12309 13.7538 6.20539 13.7487 6.2875L13.1237 16.9125C13.1204 16.9956 13.1005 17.0771 13.0653 17.1524C13.0301 17.2277 12.9802 17.2952 12.9185 17.3509C12.8569 17.4067 12.7847 17.4496 12.7063 17.4771C12.6279 17.5047 12.5447 17.5163 12.4617 17.5113C12.3788 17.5063 12.2976 17.4848 12.2231 17.4481C12.1485 17.4113 12.082 17.3601 12.0275 17.2974C11.973 17.2346 11.9315 17.1616 11.9055 17.0827C11.8796 17.0037 11.8696 16.9204 11.8763 16.8375L12.5013 6.2125C12.5109 6.04709 12.5859 5.89229 12.7096 5.78212C12.8334 5.67195 12.9958 5.61544 13.1613 5.625ZM10 5.625C10.1658 5.625 10.3247 5.69085 10.4419 5.80806C10.5592 5.92527 10.625 6.08424 10.625 6.25V16.875C10.625 17.0408 10.5592 17.1997 10.4419 17.3169C10.3247 17.4342 10.1658 17.5 10 17.5C9.83424 17.5 9.67527 17.4342 9.55806 17.3169C9.44085 17.1997 9.375 17.0408 9.375 16.875V6.25C9.375 6.08424 9.44085 5.92527 9.55806 5.80806C9.67527 5.69085 9.83424 5.625 10 5.625Z\",\n    fill: \"#FF4848\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.5eea46205b6eae512f4787dfcec7ce6c.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"book-actions\":\"BookActions_book-actions__1ptIu\",\"book-action\":\"BookActions_book-action__Imom3\"};","import React, {FC} from 'react'\r\nimport {Tooltip} from \"antd\";\r\nimport editIcon from \"../../assets/icons/edit.svg\";\r\nimport deleteIcon from \"../../assets/icons/delete.svg\";\r\nimport classes from \"./BookActions.module.scss\";\r\nimport {typedMemo} from \"../../core/utils/typed-memo\";\r\n\r\ntype Props = Readonly<{\r\n\r\n    /** Edit book. */\r\n    editBook: () => void;\r\n\r\n    /** Delete book. */\r\n    deleteBook: () => void;\r\n\r\n    /** Classname form container actions. */\r\n    containerClassName?: string;\r\n}>\r\n\r\n/** Component: Book actions. */\r\nconst BookActionsComponent: FC<Props> = ({editBook, deleteBook, containerClassName}) => (\r\n    <div className={`${classes['book-actions']} ${containerClassName || ''}`}>\r\n        <Tooltip title={'Редактировать книгу'} mouseEnterDelay={0.5}>\r\n            <img className={`${classes['book-action']}`}\r\n                 src={editIcon}\r\n                 onClick={editBook}\r\n                 alt=\"edit book's information\"/>\r\n        </Tooltip>\r\n        <Tooltip title={'Удалить книгу'} mouseEnterDelay={0.5}>\r\n            <img className={`${classes['book-action']}`}\r\n                 onClick={deleteBook}\r\n                 src={deleteIcon}\r\n                 alt=\"delete book\"/>\r\n        </Tooltip>\r\n    </div>\r\n);\r\n\r\nexport const BookActions = typedMemo(BookActionsComponent);","import React, {FC} from 'react';\r\nimport {Book} from \"core/models/book\";\r\nimport classes from './BookCard.module.scss';\r\nimport {Typography} from \"antd\";\r\nimport {typedMemo} from \"core/utils/typed-memo\";\r\nimport ratingIcon from \"assets/icons/rating.svg\";\r\nimport {useBooksStore} from \"../../core/store/books/store\";\r\nimport {BookActions} from \"../BookActions\";\r\n\r\nconst {Text} = Typography;\r\n\r\ntype Props = Readonly<{\r\n\r\n    /** Book. */\r\n    book: Book;\r\n\r\n    /** Delete book. */\r\n    deleteBook(book: Book): void;\r\n}>\r\n\r\n/** Component: Book card. */\r\nconst BookCardComponent: FC<Props> = ({book, deleteBook}) => {\r\n\r\n    /** Set editor state - editingBook and isOpened. */\r\n    const setEditorState = useBooksStore(store => store.setEditorState)\r\n\r\n    return (\r\n        <div className={`${classes['book-card']}`}>\r\n            <div className={`${classes['book-card__cover-wrapper']}`}>\r\n                {book.cover ?\r\n                    <div className={`${classes['book-card__cover']}`}\r\n                         style={{backgroundImage: `url(${book.cover})`}}/>\r\n                    : <div className={`${classes['book-card__cover-empty']}`}>\r\n                        <Text>Нет обложки</Text>\r\n                    </div>\r\n                }\r\n                {book.rating !== null\r\n                    && <div className={`${classes['book-card__rating-wrapper']}`}>\r\n                        <img src={ratingIcon} alt=\"book rating\"/>\r\n                        <Text className={`${classes['book-card__rating']}`}>\r\n                            {book.rating}\r\n                        </Text>\r\n                    </div>}\r\n\r\n                <BookActions editBook={() => setEditorState(book, true)}\r\n                             containerClassName={classes['book-card__actions']}\r\n                             deleteBook={() => deleteBook(book)}/>\r\n            </div>\r\n\r\n            <Text className={`${classes['book-card__name']}`}>{book.name}</Text>\r\n            <Text className={`${classes['book-card__authors']}`}>{book.authors}</Text>\r\n            {book.publicationYear !== null\r\n                && <Text className={`${classes['book-card__additional-info']}`}>\r\n                    Год выпуска: {book.publicationYear}\r\n                </Text>}\r\n            {book.ISBN !== null\r\n                && <Text className={`${classes['book-card__additional-info']}`}>\r\n                    ISBN: {book.ISBN}\r\n                </Text>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const BookCard = typedMemo(BookCardComponent);","import React from \"react\";\r\nimport {Book} from \"../../../../core/models/book\";\r\nimport classes from \"./BooksPage.module.scss\";\r\nimport {BookCard} from \"../../../../components/BookCard\";\r\nimport {Typography} from \"antd\";\r\nimport {Sorting} from \"../../../../core/models/sorting\";\r\n\r\nconst {Title} = Typography;\r\n\r\n/** Render book cards. */\r\nexport const renderCards = (books: Book[], sorting: Sorting, deleteBook: (book: Book) => void): React.ReactElement[] => {\r\n    const elements: React.ReactElement[] = [];\r\n    let prevSortingValue = null;\r\n\r\n    for (let i = 0; i < books.length; i++) {\r\n        if (prevSortingValue !== books[i][sorting.name]) {\r\n            prevSortingValue = books[i][sorting.name]\r\n            elements.push(<div className={`${classes['books-page__catalog__subtitle_wrapper']}`} key={`title-${i}`}>\r\n                <Title level={2} className={`${classes['books-page__catalog__subtitle']}`}>\r\n                    {getSubtitle(sorting)}: {prevSortingValue}\r\n                </Title>\r\n                <hr/>\r\n            </div>)\r\n        }\r\n        elements.push(<BookCard book={books[i]} deleteBook={deleteBook} key={i}/>)\r\n    }\r\n    return elements;\r\n}\r\n\r\n/** Get subtitle text from sorting name. */\r\nfunction getSubtitle(sorting: Sorting): string {\r\n    switch (sorting.name) {\r\n        case 'publicationYear':\r\n            return 'Год публикации';\r\n        case 'rating':\r\n            return 'Рейтинг';\r\n        default:\r\n            return ''\r\n    }\r\n}","import {DefaultOptionType} from 'rc-select/lib/Select'\r\nimport {SortingType} from \"../../core/models/sorting-type\";\r\nimport {Sorting} from \"../../core/models/sorting\";\r\n\r\n/** Options for sorting select. */\r\nexport const sortingOptions: (DefaultOptionType & { value: SortingType })[] = [\r\n    {label: 'Сначала новые', value: 'firstNew'},\r\n    {label: 'Сначала старые', value: 'firstOld'},\r\n    {label: 'Сначала лучшие', value: 'firstBest'},\r\n]\r\n\r\n/** Object for get sorting from sorting type. */\r\nexport const sortingValue: { [key: string]: Sorting } = {\r\n    firstNew: {name: 'publicationYear', order: 'desc'},\r\n    firstOld: {name: 'publicationYear', order: 'asc'},\r\n    firstBest: {name: 'rating', order: 'desc'},\r\n}","import React, {FC} from \"react\";\r\nimport {Select} from \"antd\";\r\nimport {sortingOptions, sortingValue} from \"./config\";\r\nimport {Sorting} from \"../../core/models/sorting\";\r\nimport {typedMemo} from \"../../core/utils/typed-memo\";\r\nimport {SortingType} from \"../../core/models/sorting-type\";\r\n\r\ntype Props = Readonly<{\r\n\r\n    /** Change sorting. */\r\n    onChange(value: Sorting): void;\r\n\r\n    /** Sorting. */\r\n    sorting: Sorting;\r\n}>\r\n\r\n/** Component: Books sorting select. */\r\nconst BooksSortingSelectComponent: FC<Props> = ({onChange, sorting}) => {\r\n\r\n    /** Get sorting type. */\r\n    function getSortingType(): SortingType {\r\n        if (sorting.name === 'publicationYear' && sorting.order === 'desc')\r\n            return 'firstNew';\r\n        if (sorting.name === 'publicationYear' && sorting.order === 'asc')\r\n            return 'firstOld';\r\n        if (sorting.name === 'rating' && sorting.order === 'desc')\r\n            return 'firstBest';\r\n        return 'firstNew';\r\n    }\r\n\r\n    return (<Select options={sortingOptions}\r\n                    value={getSortingType()}\r\n                    onChange={(value) => onChange(sortingValue[value])}/>)\r\n}\r\n\r\nexport const BooksSortingSelect = typedMemo(BooksSortingSelectComponent);","// extracted by mini-css-extract-plugin\nexport default {\"book-table__wrapper\":\"BooksTable_book-table__wrapper__SuFMV\",\"book-table__rating-wrapper\":\"BooksTable_book-table__rating-wrapper__3c8f8\",\"book-table__rating\":\"BooksTable_book-table__rating__9t7bB\",\"book-table__rating-icon\":\"BooksTable_book-table__rating-icon__LQdws\"};","import {Book} from \"../../core/models/book\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\nimport ratingIcon from \"../../assets/icons/rating.svg\";\r\nimport React from \"react\";\r\nimport {Typography} from \"antd\";\r\nimport classes from './BooksTable.module.scss'\r\nimport {BookActions} from \"../BookActions\";\r\n\r\nconst {Text} = Typography;\r\n\r\n/** Books table columns. */\r\nexport const getColumns = (setEditorState: (book: Book | null, isOpen: boolean) => void, deleteBook: (book: Book) => void): ColumnsType<Book> => ([\r\n    {\r\n        title: 'Название',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Авторы',\r\n        dataIndex: 'authors',\r\n        key: 'authors',\r\n    },\r\n    {\r\n        title: 'Рейтинг',\r\n        dataIndex: 'rating',\r\n        key: 'rating',\r\n        render: (_, {rating}) => (\r\n            <div className={`${classes['book-table__rating-wrapper']}`}>\r\n                {rating && <img src={ratingIcon} alt=\"book rating\"/>}\r\n                <Text className={`${classes['book-table__rating']}`}>\r\n                    {rating || ''}\r\n                </Text>\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: 'Год публикации',\r\n        dataIndex: 'publicationYear',\r\n        key: 'publicationYear',\r\n    },\r\n    {\r\n        title: 'ISBN',\r\n        dataIndex: 'ISBN',\r\n        key: 'ISBN',\r\n    },\r\n    {\r\n        title: '',\r\n        key: 'action',\r\n        render: (_, book) => (\r\n            <BookActions editBook={() => setEditorState(book, true)}\r\n                         deleteBook={() => deleteBook(book)}/>\r\n        ),\r\n    },\r\n])","import React, {FC} from 'react';\r\nimport {Book} from \"core/models/book\";\r\nimport {typedMemo} from \"core/utils/typed-memo\";\r\nimport {useBooksStore} from \"../../core/store/books/store\";\r\nimport {Table} from \"antd\";\r\nimport {getColumns} from \"./columns\";\r\nimport classes from \"./BooksTable.module.scss\";\r\n\r\ntype Props = Readonly<{\r\n\r\n    /** All books. */\r\n    books: Book[];\r\n\r\n    /** Delete book. */\r\n    deleteBook(book: Book): void;\r\n}>\r\n\r\n/** Component: Books table. */\r\nconst BooksTableComponent: FC<Props> = ({books, deleteBook}) => {\r\n\r\n    /** Set editor state - editingBook and isOpened. */\r\n    const setEditorState = useBooksStore(store => store.setEditorState)\r\n\r\n    return (\r\n        <div className={`${classes['book-table__wrapper']}`}>\r\n            <Table dataSource={books}\r\n                   columns={getColumns(setEditorState, deleteBook)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const BooksTable = typedMemo(BooksTableComponent);","/** Book display type. */\r\nexport enum GridType {\r\n    Card = 0,\r\n    Row = 1,\r\n}","import React, {FC, memo, useState} from 'react';\r\nimport {useBooksState} from \"../../../../core/services/hooks/useBooksState\";\r\nimport classes from \"./BooksPage.module.scss\";\r\nimport {Spin, Typography} from \"antd\";\r\nimport ratingIcon from \"../../../../assets/icons/rating.svg\";\r\nimport {renderCards} from \"./render\";\r\nimport {useBooksStore} from \"../../../../core/store/books/store\";\r\nimport {BooksSortingSelect} from \"../../../../components/BooksSortingSelect\";\r\nimport {BooksTable} from \"../../../../components/BooksTable\";\r\nimport {CardGridIcon, RowGridIcon} from \"../../../../components/Icons/Icons\";\r\nimport {GridType} from \"./types\";\r\nimport {BookActions} from \"../../../../components/BookActions\";\r\n\r\nconst {Title, Text} = Typography;\r\n\r\n/** Books page. */\r\nconst BooksPageComponent: FC = () => {\r\n\r\n    const {books, isLoading, bestBook, sorting, setSortingState, deleteBook} = useBooksState();\r\n\r\n    /** Book display type. */\r\n    const [gridType, setGridType] = useState(GridType.Card);\r\n\r\n    /** Set editor state - editingBook and isOpened. */\r\n    const setEditorState = useBooksStore(store => store.setEditorState);\r\n\r\n    if (isLoading) return <Spin/>\r\n    if (books === null) return null;\r\n    return (\r\n        <div className={`${classes['books-page']}`}>\r\n            {bestBook &&\r\n                <div className={`${classes['books-page__best-book']}`}>\r\n                    <Title className={`${classes['books-page__best-book__title']}`}>#ЛУЧШЕЕ</Title>\r\n\r\n                    <BookActions editBook={() => setEditorState(bestBook, true)}\r\n                                 containerClassName={classes['books-page__best-book__actions']}\r\n                                 deleteBook={() => deleteBook(bestBook)}/>\r\n\r\n                    <div className={`${classes['books-page__best-book__content']}`}>\r\n                        {bestBook.cover ?\r\n                            <div className={`${classes['books-page__best-book__cover']}`}\r\n                                 style={{backgroundImage: `url(${bestBook.cover})`}}>\r\n                                {bestBook.rating !== null\r\n                                    && <div className={`${classes['books-page__best-book__rating-wrapper']}`}>\r\n                                        <img src={ratingIcon} alt=\"book rating\"/>\r\n                                        <Text className={`${classes['books-page__best-book__rating']}`}>\r\n                                            {bestBook.rating}\r\n                                        </Text>\r\n                                    </div>}\r\n                            </div>\r\n                            : <div\r\n                                className={`${classes['books-page__best-book__cover']} ${classes['books-page__best-book__cover_empty']}`}>\r\n                                <Text>Нет обложки</Text>\r\n                            </div>\r\n                        }\r\n                        <div className={`${classes['books-page__best-book__info']}`}>\r\n                            <Text className={`${classes['books-page__best-book__name']}`}>{bestBook.name}</Text>\r\n                            <Text className={`${classes['book-card__authors']}`}>{bestBook.authors}</Text>\r\n                            {bestBook.publicationYear !== null\r\n                                && <Text className={`${classes['books-page__best-book__add-info']}`}>\r\n                                    Год выпуска: {bestBook.publicationYear}\r\n                                </Text>}\r\n                            {bestBook.ISBN !== null\r\n                                && <Text className={`${classes['books-page__best-book__add-info']}`}>\r\n                                    ISBN: {bestBook.ISBN}\r\n                                </Text>}\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            <div className={`${classes['books-page__container']} ${classes['books-page__catalog_header']}`}>\r\n                <Title>Книги каталога</Title>\r\n                <div className={`${classes['books-page__settings']}`}>\r\n                    <CardGridIcon onClick={() => setGridType(GridType.Card)}\r\n                                  className={`${classes['books-page__grid-type']} ${gridType === GridType.Card ? classes['active'] : ''}`}/>\r\n                    <RowGridIcon onClick={() => setGridType(GridType.Row)}\r\n                                 className={`${classes['books-page__grid-type']} ${gridType === GridType.Row ? classes['active'] : ''}`}/>\r\n                    <BooksSortingSelect onChange={setSortingState} sorting={sorting}/>\r\n                </div>\r\n            </div>\r\n\r\n            {books.length > 0 ?\r\n                gridType === GridType.Card ?\r\n                    <div className={`${classes['books-page__catalog']} ${classes['books-page__container']}`}>\r\n                        {renderCards(books, sorting, deleteBook)}\r\n                    </div> :\r\n                    <BooksTable books={books} deleteBook={deleteBook}/>\r\n                : <Title className={`${classes['books-page__empty-catalog']} ${classes['books-page__container']}`}>\r\n                    Книги не найдены\r\n                </Title>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const BooksPage = memo(BooksPageComponent);","import {useEffect} from 'react';\r\nimport {useBooksStore} from \"../../store/books/store\";\r\nimport {Book} from \"../../models/book\";\r\nimport {BooksService} from \"../books-service\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n/** Hook for book state */\r\nexport const useBooksState = () => {\r\n    const books = useBooksStore(store => store.books);\r\n    const bestBook = useBooksStore(store => store.bestBook);\r\n    const isLoading = useBooksStore(store => store.isLoading);\r\n    const errorStatus = useBooksStore(store => store.errorStatus);\r\n    const sorting = useBooksStore(store => store.sorting);\r\n    const setSortingState = useBooksStore(store => store.setSortingState);\r\n    const updateBooks = useBooksStore(store => () => store.updateBooks(store.sorting, store.search));\r\n\r\n    useEffect(() => {\r\n        updateBooks();\r\n    }, [sorting]);\r\n\r\n    async function deleteBook(book: Book) {\r\n        if (!window.confirm(`Удалить книгу «${book.name}»?`)) {\r\n            return;\r\n        }\r\n        const isSuccess = await BooksService.deleteBook(book.uid);\r\n        if (isSuccess) {\r\n            toast.success('Книга удалена');\r\n            updateBooks();\r\n        } else {\r\n            toast.error('Произошла ошибка при удалении книги');\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        /** All books */\r\n        books,\r\n\r\n        /** Best book (if there) */\r\n        bestBook,\r\n\r\n        /** Books is loading. */\r\n        isLoading,\r\n\r\n        /** Error status getting books. */\r\n        errorStatus,\r\n\r\n        /** Book sorting. */\r\n        sorting,\r\n\r\n        /** Change sorting. */\r\n        setSortingState,\r\n\r\n        /** Delete book. */\r\n        deleteBook\r\n    }\r\n}"],"names":["BookActions","typedMemo","_ref","editBook","deleteBook","containerClassName","_jsxs","className","concat","classes","children","_jsx","Tooltip","title","mouseEnterDelay","src","editIcon","onClick","alt","deleteIcon","Text","Typography","BookCard","book","setEditorState","useBooksStore","store","cover","style","backgroundImage","rating","ratingIcon","_deleteBook","apply","arguments","toString","name","authors","publicationYear","ISBN","Title","renderCards","books","sorting","elements","prevSortingValue","i","length","push","level","getSubtitle","sortingOptions","label","value","sortingValue","firstNew","order","firstOld","firstBest","BooksSortingSelect","onChange","Select","options","_onChange","_x","getColumns","dataIndex","key","render","_","BooksTable","Table","dataSource","columns","GridType","BooksPageComponent","_useBooksState","bestBook","isLoading","errorStatus","setSortingState","updateBooks","search","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","window","confirm","abrupt","BooksService","uid","sent","toast","stop","useEffect","useBooksState","_useState","useState","Card","_useState2","_slicedToArray","gridType","setGridType","Spin","CardGridIcon","RowGridIcon","Row","BooksPage","memo"],"sourceRoot":""}